[project]
name = "rag"
version = "0.1.0"
description = "Sistema RAG con FastAPI, LangChain y Pinecone"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[standard]>=0.119.0",
    "langchain-openai>=0.3.30",
    "langchain-text-splitters>=0.3.11",
    "pandas>=2.3.3",
    "pinecone>=7.0.0",
    "pydantic-settings>=2.10.0",
    "PyPDF2>=3.0.0",
    "python-docx>=0.8.11",
    "python-multipart>=0.0.18",
    "sqlmodel>=0.0.27",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]
[tool.ruff]
target-version = "py311"
line-length = 88
indent-width = 4

exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "*.pyc",
    ".pytest_cache",
    "build",
    "dist",
    "*.egg-info",
    ".ruff_cache",
    "comparison_demo.py",
    "check_setup.py",
]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "PIE",    # flake8-pie
    "RET",    # flake8-return
    "SIM",    # flake8-simplify
    "RUF",    # Ruff-specific rules
]

ignore = [
    "E501",    # Line too long (handled by formatter)
    "SIM105",  # Use contextlib.suppress - prefer explicit try/except
]

fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"test/**/*.py" = ["S101"]  # Use of assert detected
"__init__.py" = ["F401"]   # Imported but unused

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["app", "test"]